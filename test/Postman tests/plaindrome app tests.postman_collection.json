{
	"info": {
		"_postman_id": "9d9442ef-8ad8-45ab-a11c-151223a84af2",
		"name": "plaindrome app tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "simple get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('Server running at http://localhost:3000');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get empty conversation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"messages\":[]}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/conversation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"conversation"
					]
				}
			},
			"response": []
		},
		{
			"name": "get empty message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be an error\", function () {\r",
							"  pm.response.to.have.body('{\"errors\":[\"Invalid id\"]}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/message/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "update empty message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be an error\", function () {\r",
							"  pm.response.to.have.body('{\"errors\":[\"Invalid id\"]}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"Test update\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/message/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete empty message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be an error\", function () {\r",
							"  pm.response.to.have.body('{\"errors\":[\"Invalid id\"]}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/message/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "add message 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":1}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"race car\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/message",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "add message 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":2}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"not a palindrome\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/message",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "add message 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":3}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"A man, a plan, a canal. Panama\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/message",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "add message 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":4}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"never odd or even\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/message",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "add message 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":5}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"0_0 (: /- :) 0â€“0\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/message",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "add message 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":6}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"1 eye for of 1 eye.\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/message",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "get conversation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"messages\":[{\"id\":1,\"message\":\"race car\",\"palindrome\":true},{\"id\":2,\"message\":\"not a palindrome\",\"palindrome\":false},{\"id\":3,\"message\":\"A man, a plan, a canal. Panama\",\"palindrome\":true},{\"id\":4,\"message\":\"never odd or even\",\"palindrome\":true},{\"id\":5,\"message\":\"0_0 (: /- :) 0â€“0\",\"palindrome\":true},{\"id\":6,\"message\":\"1 eye for of 1 eye.\",\"palindrome\":false}]}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/conversation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"conversation"
					]
				}
			},
			"response": []
		},
		{
			"name": "get message 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":1,\"message\":\"race car\",\"palindrome\":true}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/message/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "get message 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":6,\"message\":\"1 eye for of 1 eye.\",\"palindrome\":false}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/message/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "update message 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"  pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"Test update\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3000/message/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "get message 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":1,\"message\":\"Test update\",\"palindrome\":false}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/message/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete message 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"  pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/message/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "get message 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be an error\", function () {\r",
							"  pm.response.to.have.body('{\"errors\":[\"Invalid id\"]}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/message/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "get message 1 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"id\":2,\"message\":\"not a palindrome\",\"palindrome\":false}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/message/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"message",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "get conversation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"body should be ok\", function () {\r",
							"  pm.response.to.have.body('{\"messages\":[{\"id\":2,\"message\":\"not a palindrome\",\"palindrome\":false},{\"id\":3,\"message\":\"A man, a plan, a canal. Panama\",\"palindrome\":true},{\"id\":4,\"message\":\"never odd or even\",\"palindrome\":true},{\"id\":5,\"message\":\"0_0 (: /- :) 0â€“0\",\"palindrome\":true},{\"id\":6,\"message\":\"1 eye for of 1 eye.\",\"palindrome\":false}]}');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/conversation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"conversation"
					]
				}
			},
			"response": []
		}
	]
}